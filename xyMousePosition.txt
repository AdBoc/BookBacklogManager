"server": "cd api && deno run -A index.ts"

// import React, { useState, useEffect, useLayoutEffect } from 'react';

// const CurrentReads = () => {
//     const [size, setSize] = useState([0, 0]);
//     useLayoutEffect(() => {
//         function updateSize() {
//             setSize([window.innerWidth, window.innerHeight]);
//         }
//         window.addEventListener('resize', updateSize);
//         updateSize();
//         return () => window.removeEventListener('resize', updateSize);
//     }, []);

//     console.log(size);

//     return (
//         <div>AA</div>
//     )
// }

// export default CurrentReads;











READFILES

 // fs.readFile(path.join(filePath, '/dist/B2.pdf'), (err, data) => {
 //   if (err) { console.log(err) };
 //   res.writeHead(200, {
 //     "Content-Type": "application/pdf",
 //     "Content-Disposition": "attachment; filename=B2.pdf"
 //   });
 //   res.write(data);
 //   res.end();
 //   // fs.createReadStream(filePath + "/dist/B2.pdf").pipe()
 // })
 // res.download(path.join(filePath, '/dist/B2.pdf'), (err) => {
 //   console.log(err);
 // });



UPLOAD FILE -- STORAGE 


//// Set storage engine
// const storage = multer.diskStorage({
//   destination: "./uploads",
//   filename: function(req, file, cb) {
//     // null as first argument means no error
//     cb(null, Date.now() + "-" + file.originalname);
//   },
// });

//   let encode_file = null;
//   let fileName = "";
//   if (req.file) {
//     fileName = req.file.originalname;
//     var filepath = path.join(__dirname, req.file.path);
//     console.log(filepath);
//     var stream = fs.readFileSync(filepath);
//     encode_file = stream.toString("base64");
//   }

EDIT BOOK IN API

// await BooksList.findOneAndUpdate({ userId: req.user.id, 'books._id': req.body._id }, { books: bookData }, (err, doc) => { console.log(doc) }).exec();

    // await BooksList.findOne({ userId: req.user.id }).select({ books: { $elemMatch: { _id: req.body._id } } }).then((bookData) => {
    //   //   Object.keys(req.body).map((value) => {
    //   //     bookData.books[0][value] = req.body[value];
    //   //   });
    //   //   bookData.save((err) => {
    //   //     if (err)
    //   //       console.log(err);
    //   //   });
    //   if (req.body.title)
    //     bookData.books[0].title = req.body.title;
    //   if (req.body.author)
    //     bookData.books[0].author = req.body.author;
    //   bookData.save();
    // });
// const { title, author, year, pages, status, type } = bookData.books[0];
  // if (req.body.title) {
  //   title = req.body.title;
  // }
  // if(req.body.author) {
  // }

  // await BooksList.findOneAndUpdate(
  //   { userId: req.user.id, 'books._id': req.body._id },
  //   { $set: { "books.$": { "title": req.body.title } } }).exec();
